angular.element(document).ready(function(){angular.bootstrap(document,["test"])});
var app=angular.module("test",["ngResource","ngAnimate","ngSanitize","ui.router","ngCookies","btford.socket-io"]).run(["$rootScope","$state","$cookies",function(e,o,n){window.AS=function(e){return angular.element(document.querySelectorAll(e))}}]);
app.config(["$httpProvider",function(t){t.interceptors.push("timestampInterceptor"),t.interceptors.push("loadingInterceptor")}]);
app.config(["$stateProvider","$urlRouterProvider",function(l,e){e.otherwise("/"),l.state("home",{url:"/",views:{menu:{templateUrl:"partials/menu.html",controller:"MenuController"},"":{templateUrl:"partials/home.html",controller:"HomeController"}}}).state("chat",{url:"/chat/:roomId",views:{menu:{templateUrl:"partials/menu.html",controller:"MenuController"},"":{templateUrl:"partials/chat.html",controller:"ChatController"}}}).state("user",{url:"/user",views:{menu:{templateUrl:"partials/menu.html",controller:"MenuController"},"":{templateUrl:"partials/user.html",controller:"UserController"}}}).state("login",{url:"/login",views:{menu:{templateUrl:"partials/menu.html",controller:"MenuController"},"":{templateUrl:"partials/login.html",controller:"LoginController"}}})}]);
app.controller("ChatController",["$scope","$rootScope","$state","$stateParams","$cookies","Socket","Message",function(e,s,o,t,n,r,a){if(s.auth){r.connect(),e.users=[],e.messages=[];var u=s.authUser.username;r.emit("switchRoom",t.roomId),r.emit("loadUsers"),r.emit("addUser",{room:t.roomId,username:u}),a.rest.query({id:t.roomId}).$promise.then(function(s){e.messages=s})["catch"](function(s){s=s.data,e.errors={},angular.forEach(s.errors,function(s,o){form[o].$setValidity("mongoose",!1),e.errors[o]=s.type})}),e.sendMessage=function(s){delete e.newMessage,s.message&&a.rest.save({room:t.roomId,message:s.message,username:u},function(e){200===e.status&&r.emit("sendChat",e.newMessage)},function(e){console.log(e)})},r.on("updateChat",function(s){e.messages.push(s)}),r.on("loadUsers",function(s){e.users=s}),r.on("updateUsers",function(s){e.users.push(s)}),r.on("removeUser",function(s){e.users.splice(e.users.indexOf(s),1)}),s.$on("$stateChangeStart",function(e){r.disconnect(!0)})}}]);
app.controller("HomeController",["$scope","$rootScope","$state","$cookies","Socket","Room",function(o,e,n,t,r,s){e.auth&&(r.connect(),r.emit("switchRoom",null),s.rest.query().$promise.then(function(o){r.emit("loadRooms",o)})["catch"](function(e){e=e.data,o.errors={},angular.forEach(e.errors,function(e,n){form[n].$setValidity("mongoose",!1),o.errors[n]=e.type})}),o.createRoom=function(n){delete o.newRoom,n.name&&s.rest.save({name:n.name,username:e.authUser.username},function(o){200===o.status&&r.emit("newRoom",o.room),Materialize.toast(o.message,3e3)},function(o){console.log(o)})},r.on("updateRooms",function(e){o.rooms?o.rooms.push(e):o.rooms=e}),r.on("removeRoom",function(e){o.rooms.splice(o.rooms.indexOf(e.roomname),1)}),e.$on("$stateChangeStart",function(o){r.disconnect(!0)}))}]);
app.controller("LoginController",["$scope","$rootScope","$state","$filter","$cookies","User",function(o,t,e,r,n,s){o.login=function(r){s.login.find(r).$promise.then(function(o){404!==o.status&&(t.authUser=o.user,n.putObject("authUser",o.user),t.auth=!0,n.put("auth",!0),e.go("home")),Materialize.toast(o.message,3e3)})["catch"](function(t){t=t.data,o.errors={},angular.forEach(t.errors,function(t,e){form[e].$setValidity("mongoose",!1),o.errors[e]=t.type})})}}]);
app.controller("MenuController",["$scope","$rootScope","$state","$cookies",function(e,t,o,a){AS(".button-collapse").sideNav({edge:"right",closeOnClick:!0}),a.get("auth")?(t.auth=!0,t.authUser=a.getObject("authUser")):a.get("auth")||"home"!=o.$current&&"chat"!=o.$current||(Materialize.toast("Necessário estar logado para acessar essa página!",3e3),t.auth=!1,o.go("login")),e.logout=function(){t.authUser={},t.auth=!1,a.remove("authUser"),a.remove("auth"),o.go("login"),Materialize.toast("Usuário desconectado com sucesso!",3e3)}}]);
app.controller("UserController",["$scope","$rootScope","$state","Socket","User",function(e,r,o,s,t){e.user={},e.errors={},e.register=function(r){e.form.$valid&&t.rest.save({name:r.name,username:r.username,password:r.password}).$promise.then(function(e){Materialize.toast(e.message,3e3),404!==e.status&&o.go("login")})["catch"](function(r){r=r.data,e.errors={},angular.forEach(r.errors,function(r,o){form[o].$setValidity("mongoose",!1),e.errors[o]=r.type})})}}]);
app.directive("ngEnter",function(){return function(n,e,t){e.bind("keypress",function(e){13===e.which&&(n.$apply(function(){n.$eval(t.ngEnter)}),e.preventDefault())})}});
app.factory("errorInterceptor",["$q","$location",function(r,t){return{responseError:function(e){return 404===e.status&&t.path("/error"),r.reject(e)}}}]);
app.factory("loadingInterceptor",["$q","$rootScope","$timeout",function(e,r,o){return{request:function(e){return r.completeLoading=!1,e},requestError:function(o){return r.completeLoading=!1,e.reject(o)},response:function(e){return r.completeLoading=!0,e},responseError:function(o){return r.completeLoading=!1,e.reject(o)}}}]);
app.factory("timestampInterceptor",function(){return{request:function(e){var r=e.url;if(r.indexOf("view")>-1)return e;var t=(new Date).getTime();return e.url=r+"?tp="+t,e}}});
app.factory("Socket",["socketFactory",function(e){var r=io.connect("http://127.0.0.1:3000",{forceNew:!0});return mySocket=e({ioSocket:r}),mySocket}]).factory("User",["$resource",function(e){return{rest:e("/api/users/:id",{id:"@id"}),login:e("/api/users/login",{username:"@username",password:"@password"},{find:{method:"POST"}})}}]).factory("Message",["$resource",function(e){return{rest:e("/api/messages/:id",{id:"@id"})}}]).factory("Room",["$resource",function(e){return{rest:e("/api/rooms/:id",{id:"@id"})}}]);